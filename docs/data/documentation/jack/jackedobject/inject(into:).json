{
  "abstract" : [
    {
      "text" : "Inject all this instance’s ",
      "type" : "text"
    },
    {
      "code" : "@Stack",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "@Jack",
      "type" : "codeVoice"
    },
    {
      "text" : " properties into the JXValue object.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The resuling object will have properties created for each of the corresponding property",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "wrappers in the ",
      "type" : "text"
    },
    {
      "code" : "JackedObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Jack\/documentation\/Jack",
        "doc:\/\/Jack\/documentation\/Jack\/JackedObject"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Jack\/documentation\/Jack\/JackedObject\/inject(into:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "extendedModule" : "Jack",
    "externalID" : "s:4Jack12JackedObjectPAAE6inject4intoSay5JXKit10JXPropertyVGAF7JXValueC_tKF",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "func"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "inject"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "externalParam",
        "text" : "into"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5JXKit7JXValueC",
        "text" : "JXValue"
      },
      {
        "kind" : "text",
        "text" : ") "
      },
      {
        "kind" : "keyword",
        "text" : "throws"
      },
      {
        "kind" : "text",
        "text" : " -> ["
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:5JXKit10JXPropertyV",
        "text" : "JXProperty"
      },
      {
        "kind" : "text",
        "text" : "]"
      }
    ],
    "modules" : [
      {
        "name" : "Jack"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Instance Method",
    "symbolKind" : "method",
    "title" : "inject(into:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "attribute",
              "text" : "@discardableResult"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "keyword",
              "text" : "func"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "inject"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "into"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "object"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5JXKit7JXValueC",
              "text" : "JXValue"
            },
            {
              "kind" : "text",
              "text" : ") "
            },
            {
              "kind" : "keyword",
              "text" : "throws"
            },
            {
              "kind" : "text",
              "text" : " -> ["
            },
            {
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:5JXKit10JXPropertyV",
              "text" : "JXProperty"
            },
            {
              "kind" : "text",
              "text" : "]"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "kind" : "parameters",
      "parameters" : [
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "the context to jack into; will create a new context if needed",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "into context"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "the JXObject to inject into",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "name" : "for object"
        }
      ]
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/jack\/jackedobject\/inject(into:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Jack/documentation/Jack": {
  "abstract" : [
    {
      "text" : "Jack is a cross-platform framework that enables you to export",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "properties of your Swift classes to an embedded JavaScript environment,",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "enabling your app to provide scriptable extensions.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Jack\/documentation\/Jack",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Jack",
  "type" : "topic",
  "url" : "\/documentation\/jack"
},
"doc://Jack/documentation/Jack/JackedObject": {
  "abstract" : [
    {
      "text" : "A ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Jack\/documentation\/Jack\/JackedObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " is an ",
      "type" : "text"
    },
    {
      "identifier" : "doc:\/\/Jack\/documentation\/Jack\/ObservableObject",
      "isActive" : true,
      "type" : "reference"
    },
    {
      "text" : " with the ability to share its properties automatically with a ",
      "type" : "text"
    },
    {
      "code" : "JXContext",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This allows an embedded JavaScript context to access the properties and invoke the functions of the containing object.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "JackedObject"
    }
  ],
  "identifier" : "doc:\/\/Jack\/documentation\/Jack\/JackedObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "JackedObject"
    }
  ],
  "role" : "symbol",
  "title" : "JackedObject",
  "type" : "topic",
  "url" : "\/documentation\/jack\/jackedobject"
},
"doc://Jack/documentation/Jack/JackedObject/inject(into:)": {
  "abstract" : [
    {
      "text" : "Inject all this instance’s ",
      "type" : "text"
    },
    {
      "code" : "@Stack",
      "type" : "codeVoice"
    },
    {
      "text" : " and ",
      "type" : "text"
    },
    {
      "code" : "@Jack",
      "type" : "codeVoice"
    },
    {
      "text" : " properties into the JXValue object.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "The resuling object will have properties created for each of the corresponding property",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "wrappers in the ",
      "type" : "text"
    },
    {
      "code" : "JackedObject",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "inject"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "into"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5JXKit7JXValueC",
      "text" : "JXValue"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:5JXKit10JXPropertyV",
      "text" : "JXProperty"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Jack\/documentation\/Jack\/JackedObject\/inject(into:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "inject(into:)",
  "type" : "topic",
  "url" : "\/documentation\/jack\/jackedobject\/inject(into:)"
},
"doc://Jack/documentation/Jack/ObservableObject": {
  "abstract" : [
    {
      "text" : "A type alias for the Combine framework’s type for an object with a publisher that emits before the object has changed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/Jack\/documentation\/Jack\/ObservableObject",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/jack\/observableobject"
}
}
}